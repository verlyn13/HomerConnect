modules = ["nodejs-20"]
[nix]
channel = "stable-24_05"

[workflows]
runButton = "Init Stage"

[[workflows.workflow]]
name = "Frontend Dev"
author = 22265372
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd apps/frontend && npm run dev"

[[workflows.workflow]]
name = "Init Stage"
author = 22265372
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "#!/bin/bash"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "set -e  # Exit on any error"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Create logs directory for better organization"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "mkdir -p logs"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Frontend initialization with proper error handling"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üîÑ Initializing Frontend...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd apps/frontend || { echo \"‚ùå Failed to enter frontend directory\"; exit 1; }"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üì¶ Installing frontend dependencies...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm install 2>&1 | tee ../../logs/frontend-install.log || { echo \"‚ùå Frontend installation failed. Check logs/frontend-install.log\"; exit 1; }"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üîç Running frontend lint check...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run lint 2>&1 | tee ../../logs/frontend-lint.log || echo \"‚ö†Ô∏è Frontend lint check failed. Check logs/frontend-lint.log\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Frontend initialization complete\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd ../.. || { echo \"‚ùå Failed to return to root\"; exit 1; }"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Backend initialization with proper error handling"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üîÑ Initializing Backend...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd apps/backend || { echo \"‚ùå Failed to enter backend directory\"; exit 1; }"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üì¶ Installing backend dependencies...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm install 2>&1 | tee ../../logs/backend-install.log || { echo \"‚ùå Backend installation failed. Check logs/backend-install.log\"; exit 1; }"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üîç Running backend lint check...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run lint 2>&1 | tee ../../logs/backend-lint.log || echo \"‚ö†Ô∏è Backend lint check failed. Check logs/backend-lint.log\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Backend initialization complete\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd ../.. || { echo \"‚ùå Failed to return to root\"; exit 1; }"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Final status check"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üîç Running final health checks...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "if [ -d \"apps/frontend/node_modules\" ] && [ -d \"apps/backend/node_modules\" ]; then"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    echo \"‚úÖ Project initialized successfully!\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "else"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    echo \"‚ùå Project initialization incomplete. Check logs directory for details.\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    exit 1"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "fi"

[[workflows.workflow]]
name = "Backend Dev"
author = 22265372
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd apps/backend && npm run start:dev"

[[workflows.workflow]]
name = "Full Stack Dev"
author = 22265372
mode = "parallel"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd $REPL_HOME/apps/frontend && npm run lint && npm run dev"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd $REPL_HOME/apps/backend && npm run lint && npm run start:dev"

[[workflows.workflow]]
name = "Lint & Format"
author = 22265372
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd $REPL_HOME/apps/frontend && npm run lint && npm run format"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd $REPL_HOME/apps/backend && npm run lint && npm run format"

[[workflows.workflow]]
name = "Test"
author = 22265372
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd $REPL_HOME/apps/frontend && npm run test"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd $REPL_HOME/apps/backend && npm run test"

[[workflows.workflow]]
name = "Build"
author = 22265372
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd $REPL_HOME/apps/frontend && npm audit && npm run build"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd $REPL_HOME/apps/backend && npm audit && npm run build"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Build completed successfully!\""

[[workflows.workflow]]
name = "Setup NestJS"
author = 22265372
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd apps/backend && npx @nestjs/cli new . --package-manager npm --language typescript --directory . --skip-git --skip-install"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd ../.."

[[workflows.workflow]]
name = "Security Audit"
author = 22265372
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd $REPL_HOME/apps/frontend && npm audit fix && npm audit"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd $REPL_HOME/apps/backend && npm audit fix && npm audit"

[[ports]]
localPort = 3000
externalPort = 80
